// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.6
// source: update-service.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string                 `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Labels    map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Spec      *PutDeploymentReq_Spec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *PutDeploymentReq) Reset() {
	*x = PutDeploymentReq{}
	mi := &file_update_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentReq) ProtoMessage() {}

func (x *PutDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentReq.ProtoReflect.Descriptor instead.
func (*PutDeploymentReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{0}
}

func (x *PutDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PutDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PutDeploymentReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *PutDeploymentReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PutDeploymentReq) GetSpec() *PutDeploymentReq_Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type PutDeploymentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutDeploymentResp) Reset() {
	*x = PutDeploymentResp{}
	mi := &file_update_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutDeploymentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentResp) ProtoMessage() {}

func (x *PutDeploymentResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentResp.ProtoReflect.Descriptor instead.
func (*PutDeploymentResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{1}
}

type RollbackRevisionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace    string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId        string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
	RevisionName string `protobuf:"bytes,4,opt,name=revisionName,proto3" json:"revisionName,omitempty"`
}

func (x *RollbackRevisionReq) Reset() {
	*x = RollbackRevisionReq{}
	mi := &file_update_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRevisionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRevisionReq) ProtoMessage() {}

func (x *RollbackRevisionReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRevisionReq.ProtoReflect.Descriptor instead.
func (*RollbackRevisionReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{2}
}

func (x *RollbackRevisionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RollbackRevisionReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RollbackRevisionReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RollbackRevisionReq) GetRevisionName() string {
	if x != nil {
		return x.RevisionName
	}
	return ""
}

type RollbackRevisionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RollbackRevisionResp) Reset() {
	*x = RollbackRevisionResp{}
	mi := &file_update_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRevisionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRevisionResp) ProtoMessage() {}

func (x *RollbackRevisionResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRevisionResp.ProtoReflect.Descriptor instead.
func (*RollbackRevisionResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{3}
}

type PauseDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *PauseDeploymentReq) Reset() {
	*x = PauseDeploymentReq{}
	mi := &file_update_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseDeploymentReq) ProtoMessage() {}

func (x *PauseDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseDeploymentReq.ProtoReflect.Descriptor instead.
func (*PauseDeploymentReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{4}
}

func (x *PauseDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PauseDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PauseDeploymentReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type PauseDeploymentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PauseDeploymentResp) Reset() {
	*x = PauseDeploymentResp{}
	mi := &file_update_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseDeploymentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseDeploymentResp) ProtoMessage() {}

func (x *PauseDeploymentResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseDeploymentResp.ProtoReflect.Descriptor instead.
func (*PauseDeploymentResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{5}
}

type UnpauseDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *UnpauseDeploymentReq) Reset() {
	*x = UnpauseDeploymentReq{}
	mi := &file_update_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseDeploymentReq) ProtoMessage() {}

func (x *UnpauseDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseDeploymentReq.ProtoReflect.Descriptor instead.
func (*UnpauseDeploymentReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{6}
}

func (x *UnpauseDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnpauseDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UnpauseDeploymentReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type UnpauseDeploymentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnpauseDeploymentResp) Reset() {
	*x = UnpauseDeploymentResp{}
	mi := &file_update_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseDeploymentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseDeploymentResp) ProtoMessage() {}

func (x *UnpauseDeploymentResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseDeploymentResp.ProtoReflect.Descriptor instead.
func (*UnpauseDeploymentResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{7}
}

type GetDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetDeploymentReq) Reset() {
	*x = GetDeploymentReq{}
	mi := &file_update_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentReq) ProtoMessage() {}

func (x *GetDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentReq.ProtoReflect.Descriptor instead.
func (*GetDeploymentReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetDeploymentReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetDeploymentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
}

func (x *GetDeploymentResp) Reset() {
	*x = GetDeploymentResp{}
	mi := &file_update_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentResp) ProtoMessage() {}

func (x *GetDeploymentResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentResp.ProtoReflect.Descriptor instead.
func (*GetDeploymentResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetDeploymentResp) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type GetDeploymentOwnedRevisionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetDeploymentOwnedRevisionsReq) Reset() {
	*x = GetDeploymentOwnedRevisionsReq{}
	mi := &file_update_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentOwnedRevisionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentOwnedRevisionsReq) ProtoMessage() {}

func (x *GetDeploymentOwnedRevisionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentOwnedRevisionsReq.ProtoReflect.Descriptor instead.
func (*GetDeploymentOwnedRevisionsReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetDeploymentOwnedRevisionsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDeploymentOwnedRevisionsReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetDeploymentOwnedRevisionsReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetDeploymentOwnedRevisionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revisions []*Revision `protobuf:"bytes,1,rep,name=revisions,proto3" json:"revisions,omitempty"`
}

func (x *GetDeploymentOwnedRevisionsResp) Reset() {
	*x = GetDeploymentOwnedRevisionsResp{}
	mi := &file_update_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeploymentOwnedRevisionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentOwnedRevisionsResp) ProtoMessage() {}

func (x *GetDeploymentOwnedRevisionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentOwnedRevisionsResp.ProtoReflect.Descriptor instead.
func (*GetDeploymentOwnedRevisionsResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetDeploymentOwnedRevisionsResp) GetRevisions() []*Revision {
	if x != nil {
		return x.Revisions
	}
	return nil
}

type GetNewRevisionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetNewRevisionReq) Reset() {
	*x = GetNewRevisionReq{}
	mi := &file_update_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewRevisionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewRevisionReq) ProtoMessage() {}

func (x *GetNewRevisionReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewRevisionReq.ProtoReflect.Descriptor instead.
func (*GetNewRevisionReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetNewRevisionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetNewRevisionReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetNewRevisionReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetNewRevisionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revision *Revision `protobuf:"bytes,1,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *GetNewRevisionResp) Reset() {
	*x = GetNewRevisionResp{}
	mi := &file_update_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewRevisionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewRevisionResp) ProtoMessage() {}

func (x *GetNewRevisionResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewRevisionResp.ProtoReflect.Descriptor instead.
func (*GetNewRevisionResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetNewRevisionResp) GetRevision() *Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

type StopDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *StopDeploymentReq) Reset() {
	*x = StopDeploymentReq{}
	mi := &file_update_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopDeploymentReq) ProtoMessage() {}

func (x *StopDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopDeploymentReq.ProtoReflect.Descriptor instead.
func (*StopDeploymentReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{14}
}

func (x *StopDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StopDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *StopDeploymentReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type StopDeploymentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopDeploymentResp) Reset() {
	*x = StopDeploymentResp{}
	mi := &file_update_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopDeploymentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopDeploymentResp) ProtoMessage() {}

func (x *StopDeploymentResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopDeploymentResp.ProtoReflect.Descriptor instead.
func (*StopDeploymentResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{15}
}

type DeleteDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *DeleteDeploymentReq) Reset() {
	*x = DeleteDeploymentReq{}
	mi := &file_update_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeploymentReq) ProtoMessage() {}

func (x *DeleteDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeploymentReq.ProtoReflect.Descriptor instead.
func (*DeleteDeploymentReq) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeleteDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteDeploymentReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type DeleteDeploymentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDeploymentResp) Reset() {
	*x = DeleteDeploymentResp{}
	mi := &file_update_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeploymentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeploymentResp) ProtoMessage() {}

func (x *DeleteDeploymentResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeploymentResp.ProtoReflect.Descriptor instead.
func (*DeleteDeploymentResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{17}
}

type StartAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessages []string `protobuf:"bytes,2,rep,name=errorMessages,proto3" json:"errorMessages,omitempty"`
}

func (x *StartAppResp) Reset() {
	*x = StartAppResp{}
	mi := &file_update_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAppResp) ProtoMessage() {}

func (x *StartAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAppResp.ProtoReflect.Descriptor instead.
func (*StartAppResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{18}
}

func (x *StartAppResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartAppResp) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

type StopAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessages []string `protobuf:"bytes,2,rep,name=errorMessages,proto3" json:"errorMessages,omitempty"`
}

func (x *StopAppResp) Reset() {
	*x = StopAppResp{}
	mi := &file_update_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAppResp) ProtoMessage() {}

func (x *StopAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAppResp.ProtoReflect.Descriptor instead.
func (*StopAppResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{19}
}

func (x *StopAppResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopAppResp) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

type QueryAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessages []string `protobuf:"bytes,2,rep,name=errorMessages,proto3" json:"errorMessages,omitempty"`
	Apps          []*App   `protobuf:"bytes,3,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *QueryAppResp) Reset() {
	*x = QueryAppResp{}
	mi := &file_update_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAppResp) ProtoMessage() {}

func (x *QueryAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAppResp.ProtoReflect.Descriptor instead.
func (*QueryAppResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{20}
}

func (x *QueryAppResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryAppResp) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

func (x *QueryAppResp) GetApps() []*App {
	if x != nil {
		return x.Apps
	}
	return nil
}

type HealthCheckAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessages []string `protobuf:"bytes,2,rep,name=errorMessages,proto3" json:"errorMessages,omitempty"`
	Healthy       bool     `protobuf:"varint,3,opt,name=healthy,proto3" json:"healthy,omitempty"`
}

func (x *HealthCheckAppResp) Reset() {
	*x = HealthCheckAppResp{}
	mi := &file_update_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckAppResp) ProtoMessage() {}

func (x *HealthCheckAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckAppResp.ProtoReflect.Descriptor instead.
func (*HealthCheckAppResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{21}
}

func (x *HealthCheckAppResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HealthCheckAppResp) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

func (x *HealthCheckAppResp) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

type AvailabilityCheckAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessages []string `protobuf:"bytes,2,rep,name=errorMessages,proto3" json:"errorMessages,omitempty"`
	Available     bool     `protobuf:"varint,3,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *AvailabilityCheckAppResp) Reset() {
	*x = AvailabilityCheckAppResp{}
	mi := &file_update_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailabilityCheckAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityCheckAppResp) ProtoMessage() {}

func (x *AvailabilityCheckAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityCheckAppResp.ProtoReflect.Descriptor instead.
func (*AvailabilityCheckAppResp) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{22}
}

func (x *AvailabilityCheckAppResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AvailabilityCheckAppResp) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

func (x *AvailabilityCheckAppResp) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type WorkerTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType            string                `protobuf:"bytes,1,opt,name=taskType,proto3" json:"taskType,omitempty"`
	DeploymentName      string                `protobuf:"bytes,2,opt,name=deploymentName,proto3" json:"deploymentName,omitempty"`
	DeploymentNamespace string                `protobuf:"bytes,3,opt,name=deploymentNamespace,proto3" json:"deploymentNamespace,omitempty"`
	DeploymentOrgId     string                `protobuf:"bytes,4,opt,name=deploymentOrgId,proto3" json:"deploymentOrgId,omitempty"`
	Payload             map[string]*anypb.Any `protobuf:"bytes,5,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkerTask) Reset() {
	*x = WorkerTask{}
	mi := &file_update_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerTask) ProtoMessage() {}

func (x *WorkerTask) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerTask.ProtoReflect.Descriptor instead.
func (*WorkerTask) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{23}
}

func (x *WorkerTask) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *WorkerTask) GetDeploymentName() string {
	if x != nil {
		return x.DeploymentName
	}
	return ""
}

func (x *WorkerTask) GetDeploymentNamespace() string {
	if x != nil {
		return x.DeploymentNamespace
	}
	return ""
}

func (x *WorkerTask) GetDeploymentOrgId() string {
	if x != nil {
		return x.DeploymentOrgId
	}
	return ""
}

func (x *WorkerTask) GetPayload() map[string]*anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload   map[string]*anypb.Any `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ErrorMsg  string                `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	ErrorType string                `protobuf:"bytes,3,opt,name=errorType,proto3" json:"errorType,omitempty"`
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	mi := &file_update_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{24}
}

func (x *TaskResponse) GetPayload() map[string]*anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *TaskResponse) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

type RevisionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RevisionInfo) Reset() {
	*x = RevisionInfo{}
	mi := &file_update_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevisionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevisionInfo) ProtoMessage() {}

func (x *RevisionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevisionInfo.ProtoReflect.Descriptor instead.
func (*RevisionInfo) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{25}
}

func (x *RevisionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PutDeploymentReq_Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectorLabels    map[string]string          `protobuf:"bytes,1,rep,name=selectorLabels,proto3" json:"selectorLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AppCount          int64                      `protobuf:"varint,2,opt,name=appCount,proto3" json:"appCount,omitempty"`
	RevisionLimit     *int64                     `protobuf:"varint,3,opt,name=revisionLimit,proto3,oneof" json:"revisionLimit,omitempty"`
	Strategy          *DeploymentStrategy        `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty"`
	App               *PutDeploymentReq_Spec_App `protobuf:"bytes,5,opt,name=app,proto3" json:"app,omitempty"`
	MinReadySeconds   int64                      `protobuf:"varint,6,opt,name=minReadySeconds,proto3" json:"minReadySeconds,omitempty"`
	DeadlineExceeded  int64                      `protobuf:"varint,7,opt,name=deadlineExceeded,proto3" json:"deadlineExceeded,omitempty"`
	AutomaticRollback *bool                      `protobuf:"varint,8,opt,name=automaticRollback,proto3,oneof" json:"automaticRollback,omitempty"`
	Mode              string                     `protobuf:"bytes,9,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *PutDeploymentReq_Spec) Reset() {
	*x = PutDeploymentReq_Spec{}
	mi := &file_update_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutDeploymentReq_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentReq_Spec) ProtoMessage() {}

func (x *PutDeploymentReq_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentReq_Spec.ProtoReflect.Descriptor instead.
func (*PutDeploymentReq_Spec) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PutDeploymentReq_Spec) GetSelectorLabels() map[string]string {
	if x != nil {
		return x.SelectorLabels
	}
	return nil
}

func (x *PutDeploymentReq_Spec) GetAppCount() int64 {
	if x != nil {
		return x.AppCount
	}
	return 0
}

func (x *PutDeploymentReq_Spec) GetRevisionLimit() int64 {
	if x != nil && x.RevisionLimit != nil {
		return *x.RevisionLimit
	}
	return 0
}

func (x *PutDeploymentReq_Spec) GetStrategy() *DeploymentStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *PutDeploymentReq_Spec) GetApp() *PutDeploymentReq_Spec_App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *PutDeploymentReq_Spec) GetMinReadySeconds() int64 {
	if x != nil {
		return x.MinReadySeconds
	}
	return 0
}

func (x *PutDeploymentReq_Spec) GetDeadlineExceeded() int64 {
	if x != nil {
		return x.DeadlineExceeded
	}
	return 0
}

func (x *PutDeploymentReq_Spec) GetAutomaticRollback() bool {
	if x != nil && x.AutomaticRollback != nil {
		return *x.AutomaticRollback
	}
	return false
}

func (x *PutDeploymentReq_Spec) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type PutDeploymentReq_Spec_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quotas                    map[string]float64 `protobuf:"bytes,2,rep,name=quotas,proto3" json:"quotas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Profile                   *SeccompProf       `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`
	SeccompDefinitionStrategy string             `protobuf:"bytes,4,opt,name=seccompDefinitionStrategy,proto3" json:"seccompDefinitionStrategy,omitempty"`
}

func (x *PutDeploymentReq_Spec_App) Reset() {
	*x = PutDeploymentReq_Spec_App{}
	mi := &file_update_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutDeploymentReq_Spec_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentReq_Spec_App) ProtoMessage() {}

func (x *PutDeploymentReq_Spec_App) ProtoReflect() protoreflect.Message {
	mi := &file_update_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentReq_Spec_App.ProtoReflect.Descriptor instead.
func (*PutDeploymentReq_Spec_App) Descriptor() ([]byte, []int) {
	return file_update_service_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *PutDeploymentReq_Spec_App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PutDeploymentReq_Spec_App) GetQuotas() map[string]float64 {
	if x != nil {
		return x.Quotas
	}
	return nil
}

func (x *PutDeploymentReq_Spec_App) GetProfile() *SeccompProf {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *PutDeploymentReq_Spec_App) GetSeccompDefinitionStrategy() string {
	if x != nil {
		return x.SeccompDefinitionStrategy
	}
	return ""
}

var File_update_service_proto protoreflect.FileDescriptor

var file_update_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x08, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x30,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xa3, 0x06, 0x0a, 0x04,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x58, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0d, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x32, 0x0a, 0x03,
	0x61, 0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70,
	0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78,
	0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x01, 0x52, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x1a, 0x41, 0x0a,
	0x13, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x86, 0x02, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x06,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x63, 0x63,
	0x6f, 0x6d, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x1a, 0x39,
	0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x5c, 0x0a, 0x12, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x22, 0x15, 0x0a, 0x13, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5e, 0x0a, 0x14, 0x55, 0x6e, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x6e, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x50,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x41, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x5b, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x5d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4e, 0x0a, 0x0c, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x0b, 0x53, 0x74,
	0x6f, 0x70, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x61, 0x70, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x6e, 0x0a, 0x12, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x22, 0x78, 0x0a, 0x18, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x50, 0x0a, 0x0c,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd6,
	0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x50, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xd9, 0x05, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a,
	0x0d, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x11, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_update_service_proto_rawDescOnce sync.Once
	file_update_service_proto_rawDescData = file_update_service_proto_rawDesc
)

func file_update_service_proto_rawDescGZIP() []byte {
	file_update_service_proto_rawDescOnce.Do(func() {
		file_update_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_update_service_proto_rawDescData)
	})
	return file_update_service_proto_rawDescData
}

var file_update_service_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_update_service_proto_goTypes = []any{
	(*PutDeploymentReq)(nil),                // 0: proto.PutDeploymentReq
	(*PutDeploymentResp)(nil),               // 1: proto.PutDeploymentResp
	(*RollbackRevisionReq)(nil),             // 2: proto.RollbackRevisionReq
	(*RollbackRevisionResp)(nil),            // 3: proto.RollbackRevisionResp
	(*PauseDeploymentReq)(nil),              // 4: proto.PauseDeploymentReq
	(*PauseDeploymentResp)(nil),             // 5: proto.PauseDeploymentResp
	(*UnpauseDeploymentReq)(nil),            // 6: proto.UnpauseDeploymentReq
	(*UnpauseDeploymentResp)(nil),           // 7: proto.UnpauseDeploymentResp
	(*GetDeploymentReq)(nil),                // 8: proto.GetDeploymentReq
	(*GetDeploymentResp)(nil),               // 9: proto.GetDeploymentResp
	(*GetDeploymentOwnedRevisionsReq)(nil),  // 10: proto.GetDeploymentOwnedRevisionsReq
	(*GetDeploymentOwnedRevisionsResp)(nil), // 11: proto.GetDeploymentOwnedRevisionsResp
	(*GetNewRevisionReq)(nil),               // 12: proto.GetNewRevisionReq
	(*GetNewRevisionResp)(nil),              // 13: proto.GetNewRevisionResp
	(*StopDeploymentReq)(nil),               // 14: proto.StopDeploymentReq
	(*StopDeploymentResp)(nil),              // 15: proto.StopDeploymentResp
	(*DeleteDeploymentReq)(nil),             // 16: proto.DeleteDeploymentReq
	(*DeleteDeploymentResp)(nil),            // 17: proto.DeleteDeploymentResp
	(*StartAppResp)(nil),                    // 18: proto.StartAppResp
	(*StopAppResp)(nil),                     // 19: proto.StopAppResp
	(*QueryAppResp)(nil),                    // 20: proto.QueryAppResp
	(*HealthCheckAppResp)(nil),              // 21: proto.HealthCheckAppResp
	(*AvailabilityCheckAppResp)(nil),        // 22: proto.AvailabilityCheckAppResp
	(*WorkerTask)(nil),                      // 23: proto.WorkerTask
	(*TaskResponse)(nil),                    // 24: proto.TaskResponse
	(*RevisionInfo)(nil),                    // 25: proto.RevisionInfo
	nil,                                     // 26: proto.PutDeploymentReq.LabelsEntry
	(*PutDeploymentReq_Spec)(nil),           // 27: proto.PutDeploymentReq.Spec
	nil,                                     // 28: proto.PutDeploymentReq.Spec.SelectorLabelsEntry
	(*PutDeploymentReq_Spec_App)(nil),       // 29: proto.PutDeploymentReq.Spec.App
	nil,                                     // 30: proto.PutDeploymentReq.Spec.App.QuotasEntry
	nil,                                     // 31: proto.WorkerTask.PayloadEntry
	nil,                                     // 32: proto.TaskResponse.PayloadEntry
	(*Deployment)(nil),                      // 33: proto.Deployment
	(*Revision)(nil),                        // 34: proto.Revision
	(*App)(nil),                             // 35: proto.App
	(*DeploymentStrategy)(nil),              // 36: proto.DeploymentStrategy
	(*SeccompProf)(nil),                     // 37: proto.SeccompProf
	(*anypb.Any)(nil),                       // 38: google.protobuf.Any
}
var file_update_service_proto_depIdxs = []int32{
	26, // 0: proto.PutDeploymentReq.labels:type_name -> proto.PutDeploymentReq.LabelsEntry
	27, // 1: proto.PutDeploymentReq.spec:type_name -> proto.PutDeploymentReq.Spec
	33, // 2: proto.GetDeploymentResp.deployment:type_name -> proto.Deployment
	34, // 3: proto.GetDeploymentOwnedRevisionsResp.revisions:type_name -> proto.Revision
	34, // 4: proto.GetNewRevisionResp.revision:type_name -> proto.Revision
	35, // 5: proto.QueryAppResp.apps:type_name -> proto.App
	31, // 6: proto.WorkerTask.payload:type_name -> proto.WorkerTask.PayloadEntry
	32, // 7: proto.TaskResponse.payload:type_name -> proto.TaskResponse.PayloadEntry
	28, // 8: proto.PutDeploymentReq.Spec.selectorLabels:type_name -> proto.PutDeploymentReq.Spec.SelectorLabelsEntry
	36, // 9: proto.PutDeploymentReq.Spec.strategy:type_name -> proto.DeploymentStrategy
	29, // 10: proto.PutDeploymentReq.Spec.app:type_name -> proto.PutDeploymentReq.Spec.App
	30, // 11: proto.PutDeploymentReq.Spec.App.quotas:type_name -> proto.PutDeploymentReq.Spec.App.QuotasEntry
	37, // 12: proto.PutDeploymentReq.Spec.App.profile:type_name -> proto.SeccompProf
	38, // 13: proto.WorkerTask.PayloadEntry.value:type_name -> google.protobuf.Any
	38, // 14: proto.TaskResponse.PayloadEntry.value:type_name -> google.protobuf.Any
	0,  // 15: proto.UpdateService.PutDeployment:input_type -> proto.PutDeploymentReq
	8,  // 16: proto.UpdateService.GetDeployment:input_type -> proto.GetDeploymentReq
	10, // 17: proto.UpdateService.GetDeploymentOwnedRevisions:input_type -> proto.GetDeploymentOwnedRevisionsReq
	12, // 18: proto.UpdateService.GetNewRevision:input_type -> proto.GetNewRevisionReq
	2,  // 19: proto.UpdateService.RollbackRevision:input_type -> proto.RollbackRevisionReq
	4,  // 20: proto.UpdateService.PauseDeployment:input_type -> proto.PauseDeploymentReq
	6,  // 21: proto.UpdateService.UnpauseDeployment:input_type -> proto.UnpauseDeploymentReq
	14, // 22: proto.UpdateService.StopDeployment:input_type -> proto.StopDeploymentReq
	16, // 23: proto.UpdateService.DeleteDeployment:input_type -> proto.DeleteDeploymentReq
	1,  // 24: proto.UpdateService.PutDeployment:output_type -> proto.PutDeploymentResp
	9,  // 25: proto.UpdateService.GetDeployment:output_type -> proto.GetDeploymentResp
	11, // 26: proto.UpdateService.GetDeploymentOwnedRevisions:output_type -> proto.GetDeploymentOwnedRevisionsResp
	13, // 27: proto.UpdateService.GetNewRevision:output_type -> proto.GetNewRevisionResp
	3,  // 28: proto.UpdateService.RollbackRevision:output_type -> proto.RollbackRevisionResp
	5,  // 29: proto.UpdateService.PauseDeployment:output_type -> proto.PauseDeploymentResp
	7,  // 30: proto.UpdateService.UnpauseDeployment:output_type -> proto.UnpauseDeploymentResp
	15, // 31: proto.UpdateService.StopDeployment:output_type -> proto.StopDeploymentResp
	17, // 32: proto.UpdateService.DeleteDeployment:output_type -> proto.DeleteDeploymentResp
	24, // [24:33] is the sub-list for method output_type
	15, // [15:24] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_update_service_proto_init() }
func file_update_service_proto_init() {
	if File_update_service_proto != nil {
		return
	}
	file_update_service_model_proto_init()
	file_update_service_proto_msgTypes[27].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_update_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_update_service_proto_goTypes,
		DependencyIndexes: file_update_service_proto_depIdxs,
		MessageInfos:      file_update_service_proto_msgTypes,
	}.Build()
	File_update_service_proto = out.File
	file_update_service_proto_rawDesc = nil
	file_update_service_proto_goTypes = nil
	file_update_service_proto_depIdxs = nil
}
