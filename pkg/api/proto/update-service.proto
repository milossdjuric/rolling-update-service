syntax = "proto3";

option go_package = "update-service/pkg/api";

package proto;

import "update-service-model.proto";
import "google/protobuf/any.proto";

service UpdateService {
    rpc PutDeployment(PutDeploymentReq) returns (PutDeploymentResp) {}
    rpc GetDeployment(GetDeploymentReq) returns (GetDeploymentResp) {}
    rpc GetDeploymentOwnedRevisions(GetDeploymentOwnedRevisionsReq) returns (GetDeploymentOwnedRevisionsResp) {}
    rpc GetNewRevision(GetNewRevisionReq) returns (GetNewRevisionResp) {}
    rpc RollbackRevision(RollbackRevisionReq) returns (RollbackRevisionResp) {}
    rpc PauseDeployment(PauseDeploymentReq) returns (PauseDeploymentResp) {}
    rpc UnpauseDeployment(UnpauseDeploymentReq) returns (UnpauseDeploymentResp) {}
    rpc StopDeployment(StopDeploymentReq) returns (StopDeploymentResp) {}
    rpc DeleteDeployment(DeleteDeploymentReq) returns (DeleteDeploymentResp) {}
}

message PutDeploymentReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
    map<string, string> labels = 4;
    message Spec {
        map<string, string> selectorLabels = 1;
        int64 appCount = 2;
        optional int64 revisionLimit = 3;
        DeploymentStrategy strategy = 4;
        message App {
            string name = 1;
            map<string, double> quotas = 2;
            SeccompProf profile = 3;
            string seccompDefinitionStrategy = 4;
        }
        App app = 5;
        int64 minReadySeconds = 6;
        int64 deadlineExceeded = 7;
        optional bool automaticRollback = 8;
        string mode = 9;
        optional int64 reconcilePeriod = 10;
    }
    Spec spec = 5;
}

message PutDeploymentResp {}

message RollbackRevisionReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
    string revisionName = 4;
}

message RollbackRevisionResp {}

message PauseDeploymentReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
}

message PauseDeploymentResp {}

message UnpauseDeploymentReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
}

message UnpauseDeploymentResp {}

message GetDeploymentReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
}

message GetDeploymentResp {
    Deployment deployment = 1;
}

message GetDeploymentOwnedRevisionsReq{
    string name = 1;
    string namespace = 2;
    string orgId = 3;
}

message GetDeploymentOwnedRevisionsResp{
    repeated Revision revisions = 1;
}

message GetNewRevisionReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
}

message GetNewRevisionResp {
    Revision revision = 1;
}

message StopDeploymentReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
}

message StopDeploymentResp {}

message DeleteDeploymentReq {
    string name = 1;
    string namespace = 2;
    string orgId = 3;
}

message DeleteDeploymentResp {}

message StartAppResp{
  bool success = 1;
  repeated string errorMessages = 2;
}

message StopAppResp{
  bool success = 1;
  repeated string errorMessages = 2;
}

message QueryAppResp{
  bool success = 1;
  repeated string errorMessages = 2;
  repeated App apps = 3;
}

message HealthCheckAppResp{
  bool success = 1;
  repeated string errorMessages = 2;
  bool healthy = 3;
}

message AvailabilityCheckAppResp{
  bool success = 1;
  repeated string errorMessages = 2;
  bool available = 3;
}

message QueryAllAppResp{
    bool success = 1;
    repeated string errorMessages = 2;
    repeated App totalApps = 3;
    repeated App readyApps = 4;
    repeated App availableApps = 5;
}

message WorkerTask{
    string taskType = 1;
    string deploymentName = 2;
    string deploymentNamespace = 3; 
    string deploymentOrgId = 4;
    map<string, google.protobuf.Any> payload = 5;
}

message TaskResponse{
    map<string, google.protobuf.Any> payload = 1;
    string errorMsg = 2;
    string errorType = 3;
}

message RevisionInfo{
    string name = 1;
}